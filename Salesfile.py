# -*- coding: utf-8 -*-
"""Waleed2010292.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YH28Iq3-wV7bDO114hQ_EoJ7_6um-QK-
"""

from google.colab import drive
from tabulate import tabulate
drive.mount('/content/drive')
from google.colab import files
uploaded = files.upload()

import pandas as  pd
import numpy as n
from csv import writer
import csv
Book=pd.read_csv('Book2010292.csv')
Book
uploaded = files.upload()
BB=pd.read_csv('Borrower2010292.csv')
BB


#Add Module
def Add_Book():
  print('Add The book information')
  B_No = input("Please Enter Book number :")
  B_Title = input("Please Enter Book Title: ")
  B_Author = input("Please Enter Book Author :")
  B_Publisher = input("Please Enter Book Publisher: ")
  B_Year = input("Please Enter Book Year of Publish: ")
  B_Copies = input("Please Enter total copies of Books: ")
  B_CAvailable = input("Please Enter Copies available ")
  Book = open('Book2010292.csv', 'r', newline='')
  Book = open('Book2010292.csv', 'a', newline='')
  csvreader = csv.reader(Book)
  csvwriter = csv.writer(Book)
  csvwriter.writerow([B_No,B_Title,B_Author, B_Publisher, B_Year, B_Copies, B_CAvailable])

  print('--------New Book added successfully------\n')
  Frontmenu()




 


#Search Book module
def Search_Book():  
  B_No = input("Please Enter a Book number or year to be searcched by : \n ")
  B_Title = input("Please Enter a Book Title or author to be searched by : \n ")
  Bs = int(B_No)
  Book = pd.read_csv('Book2010292.csv')
  found = False
  if Bs in list(Book.loc[:, 'B_No']): 
    print("Book is found")
    Borrow1=(Book.loc[(Book['B_No'] == Bs)])
    print(tabulate(Borrow1, headers = 'keys', tablefmt = 'grid'))

    found = True
  if B_Title in list(Book.loc[:, 'B_Title']): 
    Borrow1=(Book.loc[(Book['B_Title'] == B_Title)])
    print(tabulate(Borrow1, headers = 'keys', tablefmt = 'grid'))
    found = True
  if B_Title in list(Book.loc[:, 'B_Author']): 
    Borrow1=(Book.loc[(Book['B_Author'] == B_Title)])
    print(tabulate(Borrow1, headers = 'keys', tablefmt = 'grid'))
    print("Book is found")
    found = True
  if Bs in list(Book.loc[:, 'B_Year']): 
     print("Book is found")
     found = True
  if not found:
    print("Sorry We do not have the Book.\n")
    print("\n")
    print("\n")

  Frontmenu()




#display book module
def DisplayBooks():
  Book=pd.read_csv('Book2010292.csv')
  print(tabulate(Book, headers = 'keys', tablefmt = 'grid'))
  Frontmenu()

def DisplayBorrower():
  BB = pd.read_csv('Borrower2010292.csv')
  print(tabulate(BB, headers = 'keys', tablefmt = 'grid'))
  Frontmenu()



#BorrowBook module

def Bookcataloq():
  B_No = input("Please Enter a Book number or year to be Borrowed : \n ")
  B_Title = input("Please Enter a Book Title or author to be Borrowed : \n ")
  Bs = int(B_No)
  found = False
  Book = pd.read_csv('Book2010292.csv')
  
  if B_Title in list(Book.loc[:, 'B_Title']): 
     print("Book is found")
     found = True
  if B_Title in list(Book.loc[:, 'B_Author']): 
     print("Book is found")
     found = True
  if Bs in list(Book.loc[:, 'B_Year']): 
     print("Book is found")
     found = True
  if not found:
    print("Sorry We do not have the Book.\n")
    print("\n")
    print("\n")
    Frontmenu()
  else:   
    Book = pd.read_csv('Book2010292.csv')
    Borrow1=(Book.loc[(Book['B_No'] == Bs) | (Book['B_Title'] == B_Title)])
    if ((0 in set(Borrow1['B_CAvailable']))== True):
      print("Book is not available")
      Frontmenu()
    else:
      print("Book is available")
      Borrow1['B_CAvailable'] = Borrow1['B_CAvailable'] - 1
      print(Borrow1)
      index = Borrow1.index
      Book.loc[index, :] = Borrow1[:]
      Book.to_csv('Book2010292.csv', mode='w', index=False, header=True)
      Book = pd.read_csv('Book2010292.csv')
      BB = pd.read_csv('Borrower2010292.csv')
      Borrower = input("Enter name of borrower:")
      T_Date = input("Enter Date: ")
      BB = open('Borrower2010292.csv', 'a', newline='')
      csvreader = csv.reader(BB)
      csvwriter = csv.writer(BB)       
      B_No= Borrow1['B_No']
      B_Title=Borrow1['B_Title']
      csvwriter.writerow([B_No,B_Title,Borrower, T_Date])
      print('Book information added in database successfully')
      Frontmenu()
          


#Return book module

def Retrun():
  Book=pd.read_csv('Book2010292.csv')
  Br = input("Enter book name to return ")
  if Br in list(Book.loc[:, 'B_Title']): 
     print("Book is found")
     found = True
     returnb=(Book.loc[(Book['B_No'] == Br) | (Book['B_Title'] == Br)])
     returnb['B_CAvailable'] = returnb['B_CAvailable'] + 1
     print(returnb)
     index = returnb.index
     Book.loc[index, :] = returnb[:]
     Book.to_csv('Book2010292.csv', mode='w', index=False, header=True)
     print("Book Returned successfully")
     Frontmenu()
  else:
     print("Book is not database")
     Frontmenu()
     



#Integration module Main module

def Frontmenu():

    print("--------------Computer skills training center Library---------------------\n")
    print("For Adding new Book: Please Enter button 1.\n ")
    print('For Searching a Book:Please Enter button 2 \n')
    print("For displaying books available: Please Enter button 3 \n ")
    print("For Borrowing a book: Please Enter button 4 \n")
    print("For returning a book: Please Enter button 5 \n")
    print("For displaying borrower : Please Enter button 6 \n ")
    print("For Exiting Library Services: Please Enter button 7 \n")
    userinput = int(input())
    if userinput == 1:
         Add_Book()   #Book will be added in database of CSV
         
      
    elif userinput == 2:                   #Searching Book
         print("Book Searching..... \n")
         Search_Book()

    elif userinput == 3:
         DisplayBooks()

    elif userinput == 4:
         Bookcataloq() 
    
  
    elif userinput == 5:
         Retrun()
    
    elif userinput == 6:
        DisplayBorrower()

    elif userinput == 7:
        print('Shutting down \n')
        print(' \n')
        print(' \n')
        exit()
    

    else:
        print('please enter valid input')
        Book.to_csv('Book2010292.csv', index=False)
        print("")
        input("Invalid ENTER..")
        Frontmenu()




Frontmenu()